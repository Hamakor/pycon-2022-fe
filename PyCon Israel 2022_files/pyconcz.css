/* $brand-secondary: #d52034; */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
@import url(https://fonts.googleapis.com/css?family=Amatic+SC:700);
html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline; }

audio:not([controls]) {
  display: none;
  height: 0; }

[hidden],
template {
  display: none; }

a {
  background-color: transparent; }

a:active,
a:hover {
  outline: 0; }

abbr[title] {
  border-bottom: 1px dotted; }

b,
strong {
  font-weight: bold; }

dfn {
  font-style: italic; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

mark {
  background: #ff0;
  color: #000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

img {
  border: 0; }

svg:not(:root) {
  overflow: hidden; }

figure {
  margin: 1em 40px; }

hr {
  box-sizing: content-box;
  height: 0; }

pre {
  overflow: auto; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0; }

button {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer; }

button[disabled],
html input[disabled] {
  cursor: default; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

input {
  line-height: normal; }

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box; }

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

legend {
  border: 0;
  padding: 0; }

textarea {
  overflow: auto; }

optgroup {
  font-weight: bold; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: 10px;
  padding-right: 10px; }
  .container:before, .container:after {
    content: " ";
    display: table; }
  .container:after {
    clear: both; }
  @media (min-width: 768px) {
    .container {
      width: 750px; } }
  @media (min-width: 992px) {
    .container {
      width: 960px; } }
  @media (min-width: 1200px) {
    .container {
      width: 960px; } }

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-left: 10px;
  padding-right: 10px; }
  .container-fluid:before, .container-fluid:after {
    content: " ";
    display: table; }
  .container-fluid:after {
    clear: both; }

.row {
  margin-left: -10px;
  margin-right: -10px; }
  .row:before, .row:after {
    content: " ";
    display: table; }
  .row:after {
    clear: both; }

.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px; }

.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  float: left; }

.col-xs-1 {
  width: 8.33333%; }

.col-xs-2 {
  width: 16.66667%; }

.col-xs-3 {
  width: 25%; }

.col-xs-4 {
  width: 33.33333%; }

.col-xs-5 {
  width: 41.66667%; }

.col-xs-6 {
  width: 50%; }

.col-xs-7 {
  width: 58.33333%; }

.col-xs-8 {
  width: 66.66667%; }

.col-xs-9 {
  width: 75%; }

.col-xs-10 {
  width: 83.33333%; }

.col-xs-11 {
  width: 91.66667%; }

.col-xs-12 {
  width: 100%; }

.col-xs-pull-0 {
  right: auto; }

.col-xs-pull-1 {
  right: 8.33333%; }

.col-xs-pull-2 {
  right: 16.66667%; }

.col-xs-pull-3 {
  right: 25%; }

.col-xs-pull-4 {
  right: 33.33333%; }

.col-xs-pull-5 {
  right: 41.66667%; }

.col-xs-pull-6 {
  right: 50%; }

.col-xs-pull-7 {
  right: 58.33333%; }

.col-xs-pull-8 {
  right: 66.66667%; }

.col-xs-pull-9 {
  right: 75%; }

.col-xs-pull-10 {
  right: 83.33333%; }

.col-xs-pull-11 {
  right: 91.66667%; }

.col-xs-pull-12 {
  right: 100%; }

.col-xs-push-0 {
  left: auto; }

.col-xs-push-1 {
  left: 8.33333%; }

.col-xs-push-2 {
  left: 16.66667%; }

.col-xs-push-3 {
  left: 25%; }

.col-xs-push-4 {
  left: 33.33333%; }

.col-xs-push-5 {
  left: 41.66667%; }

.col-xs-push-6 {
  left: 50%; }

.col-xs-push-7 {
  left: 58.33333%; }

.col-xs-push-8 {
  left: 66.66667%; }

.col-xs-push-9 {
  left: 75%; }

.col-xs-push-10 {
  left: 83.33333%; }

.col-xs-push-11 {
  left: 91.66667%; }

.col-xs-push-12 {
  left: 100%; }

.col-xs-offset-0 {
  margin-left: 0%; }

.col-xs-offset-1 {
  margin-left: 8.33333%; }

.col-xs-offset-2 {
  margin-left: 16.66667%; }

.col-xs-offset-3 {
  margin-left: 25%; }

.col-xs-offset-4 {
  margin-left: 33.33333%; }

.col-xs-offset-5 {
  margin-left: 41.66667%; }

.col-xs-offset-6 {
  margin-left: 50%; }

.col-xs-offset-7 {
  margin-left: 58.33333%; }

.col-xs-offset-8 {
  margin-left: 66.66667%; }

.col-xs-offset-9 {
  margin-left: 75%; }

.col-xs-offset-10 {
  margin-left: 83.33333%; }

.col-xs-offset-11 {
  margin-left: 91.66667%; }

.col-xs-offset-12 {
  margin-left: 100%; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
    float: left; }
  .col-sm-1 {
    width: 8.33333%; }
  .col-sm-2 {
    width: 16.66667%; }
  .col-sm-3 {
    width: 25%; }
  .col-sm-4 {
    width: 33.33333%; }
  .col-sm-5 {
    width: 41.66667%; }
  .col-sm-6 {
    width: 50%; }
  .col-sm-7 {
    width: 58.33333%; }
  .col-sm-8 {
    width: 66.66667%; }
  .col-sm-9 {
    width: 75%; }
  .col-sm-10 {
    width: 83.33333%; }
  .col-sm-11 {
    width: 91.66667%; }
  .col-sm-12 {
    width: 100%; }
  .col-sm-pull-0 {
    right: auto; }
  .col-sm-pull-1 {
    right: 8.33333%; }
  .col-sm-pull-2 {
    right: 16.66667%; }
  .col-sm-pull-3 {
    right: 25%; }
  .col-sm-pull-4 {
    right: 33.33333%; }
  .col-sm-pull-5 {
    right: 41.66667%; }
  .col-sm-pull-6 {
    right: 50%; }
  .col-sm-pull-7 {
    right: 58.33333%; }
  .col-sm-pull-8 {
    right: 66.66667%; }
  .col-sm-pull-9 {
    right: 75%; }
  .col-sm-pull-10 {
    right: 83.33333%; }
  .col-sm-pull-11 {
    right: 91.66667%; }
  .col-sm-pull-12 {
    right: 100%; }
  .col-sm-push-0 {
    left: auto; }
  .col-sm-push-1 {
    left: 8.33333%; }
  .col-sm-push-2 {
    left: 16.66667%; }
  .col-sm-push-3 {
    left: 25%; }
  .col-sm-push-4 {
    left: 33.33333%; }
  .col-sm-push-5 {
    left: 41.66667%; }
  .col-sm-push-6 {
    left: 50%; }
  .col-sm-push-7 {
    left: 58.33333%; }
  .col-sm-push-8 {
    left: 66.66667%; }
  .col-sm-push-9 {
    left: 75%; }
  .col-sm-push-10 {
    left: 83.33333%; }
  .col-sm-push-11 {
    left: 91.66667%; }
  .col-sm-push-12 {
    left: 100%; }
  .col-sm-offset-0 {
    margin-left: 0%; }
  .col-sm-offset-1 {
    margin-left: 8.33333%; }
  .col-sm-offset-2 {
    margin-left: 16.66667%; }
  .col-sm-offset-3 {
    margin-left: 25%; }
  .col-sm-offset-4 {
    margin-left: 33.33333%; }
  .col-sm-offset-5 {
    margin-left: 41.66667%; }
  .col-sm-offset-6 {
    margin-left: 50%; }
  .col-sm-offset-7 {
    margin-left: 58.33333%; }
  .col-sm-offset-8 {
    margin-left: 66.66667%; }
  .col-sm-offset-9 {
    margin-left: 75%; }
  .col-sm-offset-10 {
    margin-left: 83.33333%; }
  .col-sm-offset-11 {
    margin-left: 91.66667%; }
  .col-sm-offset-12 {
    margin-left: 100%; } }

@media (min-width: 992px) {
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
    float: left; }
  .col-md-1 {
    width: 8.33333%; }
  .col-md-2 {
    width: 16.66667%; }
  .col-md-3 {
    width: 25%; }
  .col-md-4 {
    width: 33.33333%; }
  .col-md-5 {
    width: 41.66667%; }
  .col-md-6 {
    width: 50%; }
  .col-md-7 {
    width: 58.33333%; }
  .col-md-8 {
    width: 66.66667%; }
  .col-md-9 {
    width: 75%; }
  .col-md-10 {
    width: 83.33333%; }
  .col-md-11 {
    width: 91.66667%; }
  .col-md-12 {
    width: 100%; }
  .col-md-pull-0 {
    right: auto; }
  .col-md-pull-1 {
    right: 8.33333%; }
  .col-md-pull-2 {
    right: 16.66667%; }
  .col-md-pull-3 {
    right: 25%; }
  .col-md-pull-4 {
    right: 33.33333%; }
  .col-md-pull-5 {
    right: 41.66667%; }
  .col-md-pull-6 {
    right: 50%; }
  .col-md-pull-7 {
    right: 58.33333%; }
  .col-md-pull-8 {
    right: 66.66667%; }
  .col-md-pull-9 {
    right: 75%; }
  .col-md-pull-10 {
    right: 83.33333%; }
  .col-md-pull-11 {
    right: 91.66667%; }
  .col-md-pull-12 {
    right: 100%; }
  .col-md-push-0 {
    left: auto; }
  .col-md-push-1 {
    left: 8.33333%; }
  .col-md-push-2 {
    left: 16.66667%; }
  .col-md-push-3 {
    left: 25%; }
  .col-md-push-4 {
    left: 33.33333%; }
  .col-md-push-5 {
    left: 41.66667%; }
  .col-md-push-6 {
    left: 50%; }
  .col-md-push-7 {
    left: 58.33333%; }
  .col-md-push-8 {
    left: 66.66667%; }
  .col-md-push-9 {
    left: 75%; }
  .col-md-push-10 {
    left: 83.33333%; }
  .col-md-push-11 {
    left: 91.66667%; }
  .col-md-push-12 {
    left: 100%; }
  .col-md-offset-0 {
    margin-left: 0%; }
  .col-md-offset-1 {
    margin-left: 8.33333%; }
  .col-md-offset-2 {
    margin-left: 16.66667%; }
  .col-md-offset-3 {
    margin-left: 25%; }
  .col-md-offset-4 {
    margin-left: 33.33333%; }
  .col-md-offset-5 {
    margin-left: 41.66667%; }
  .col-md-offset-6 {
    margin-left: 50%; }
  .col-md-offset-7 {
    margin-left: 58.33333%; }
  .col-md-offset-8 {
    margin-left: 66.66667%; }
  .col-md-offset-9 {
    margin-left: 75%; }
  .col-md-offset-10 {
    margin-left: 83.33333%; }
  .col-md-offset-11 {
    margin-left: 91.66667%; }
  .col-md-offset-12 {
    margin-left: 100%; } }

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
    float: left; }
  .col-lg-1 {
    width: 8.33333%; }
  .col-lg-2 {
    width: 16.66667%; }
  .col-lg-3 {
    width: 25%; }
  .col-lg-4 {
    width: 33.33333%; }
  .col-lg-5 {
    width: 41.66667%; }
  .col-lg-6 {
    width: 50%; }
  .col-lg-7 {
    width: 58.33333%; }
  .col-lg-8 {
    width: 66.66667%; }
  .col-lg-9 {
    width: 75%; }
  .col-lg-10 {
    width: 83.33333%; }
  .col-lg-11 {
    width: 91.66667%; }
  .col-lg-12 {
    width: 100%; }
  .col-lg-pull-0 {
    right: auto; }
  .col-lg-pull-1 {
    right: 8.33333%; }
  .col-lg-pull-2 {
    right: 16.66667%; }
  .col-lg-pull-3 {
    right: 25%; }
  .col-lg-pull-4 {
    right: 33.33333%; }
  .col-lg-pull-5 {
    right: 41.66667%; }
  .col-lg-pull-6 {
    right: 50%; }
  .col-lg-pull-7 {
    right: 58.33333%; }
  .col-lg-pull-8 {
    right: 66.66667%; }
  .col-lg-pull-9 {
    right: 75%; }
  .col-lg-pull-10 {
    right: 83.33333%; }
  .col-lg-pull-11 {
    right: 91.66667%; }
  .col-lg-pull-12 {
    right: 100%; }
  .col-lg-push-0 {
    left: auto; }
  .col-lg-push-1 {
    left: 8.33333%; }
  .col-lg-push-2 {
    left: 16.66667%; }
  .col-lg-push-3 {
    left: 25%; }
  .col-lg-push-4 {
    left: 33.33333%; }
  .col-lg-push-5 {
    left: 41.66667%; }
  .col-lg-push-6 {
    left: 50%; }
  .col-lg-push-7 {
    left: 58.33333%; }
  .col-lg-push-8 {
    left: 66.66667%; }
  .col-lg-push-9 {
    left: 75%; }
  .col-lg-push-10 {
    left: 83.33333%; }
  .col-lg-push-11 {
    left: 91.66667%; }
  .col-lg-push-12 {
    left: 100%; }
  .col-lg-offset-0 {
    margin-left: 0%; }
  .col-lg-offset-1 {
    margin-left: 8.33333%; }
  .col-lg-offset-2 {
    margin-left: 16.66667%; }
  .col-lg-offset-3 {
    margin-left: 25%; }
  .col-lg-offset-4 {
    margin-left: 33.33333%; }
  .col-lg-offset-5 {
    margin-left: 41.66667%; }
  .col-lg-offset-6 {
    margin-left: 50%; }
  .col-lg-offset-7 {
    margin-left: 58.33333%; }
  .col-lg-offset-8 {
    margin-left: 66.66667%; }
  .col-lg-offset-9 {
    margin-left: 75%; }
  .col-lg-offset-10 {
    margin-left: 83.33333%; }
  .col-lg-offset-11 {
    margin-left: 91.66667%; }
  .col-lg-offset-12 {
    margin-left: 100%; } }

@-ms-viewport {
  width: device-width; }

.visible-xs {
  display: none !important; }

.visible-sm {
  display: none !important; }

.visible-md {
  display: none !important; }

.visible-lg {
  display: none !important; }

.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important; }

@media (max-width: 767px) {
  .visible-xs {
    display: block !important; }
  table.visible-xs {
    display: table; }
  tr.visible-xs {
    display: table-row !important; }
  th.visible-xs,
  td.visible-xs {
    display: table-cell !important; } }

@media (max-width: 767px) {
  .visible-xs-block {
    display: block !important; } }

@media (max-width: 767px) {
  .visible-xs-inline {
    display: inline !important; } }

@media (max-width: 767px) {
  .visible-xs-inline-block {
    display: inline-block !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm {
    display: block !important; }
  table.visible-sm {
    display: table; }
  tr.visible-sm {
    display: table-row !important; }
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block {
    display: block !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline {
    display: inline !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block {
    display: inline-block !important; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md {
    display: block !important; }
  table.visible-md {
    display: table; }
  tr.visible-md {
    display: table-row !important; }
  th.visible-md,
  td.visible-md {
    display: table-cell !important; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block {
    display: block !important; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline {
    display: inline !important; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block {
    display: inline-block !important; } }

@media (min-width: 1200px) {
  .visible-lg {
    display: block !important; }
  table.visible-lg {
    display: table; }
  tr.visible-lg {
    display: table-row !important; }
  th.visible-lg,
  td.visible-lg {
    display: table-cell !important; } }

@media (min-width: 1200px) {
  .visible-lg-block {
    display: block !important; } }

@media (min-width: 1200px) {
  .visible-lg-inline {
    display: inline !important; } }

@media (min-width: 1200px) {
  .visible-lg-inline-block {
    display: inline-block !important; } }

@media (max-width: 767px) {
  .hidden-xs, .branch,
  .branch-description,
  .commit,
  .commit-rtl,
  .commit-holder,
  .title br {
    display: none !important; } }

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm {
    display: none !important; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md {
    display: none !important; } }

@media (min-width: 1200px) {
  .hidden-lg {
    display: none !important; } }

.visible-print {
  display: none !important; }

@media print {
  .visible-print {
    display: block !important; }
  table.visible-print {
    display: table; }
  tr.visible-print {
    display: table-row !important; }
  th.visible-print,
  td.visible-print {
    display: table-cell !important; } }

.visible-print-block {
  display: none !important; }
  @media print {
    .visible-print-block {
      display: block !important; } }

.visible-print-inline {
  display: none !important; }
  @media print {
    .visible-print-inline {
      display: inline !important; } }

.visible-print-inline-block {
  display: none !important; }
  @media print {
    .visible-print-inline-block {
      display: inline-block !important; } }

@media print {
  .hidden-print {
    display: none !important; } }

.navbar {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1000;
  height: 60px;
  border-bottom: 1px solid #d1d1d1;
  background-color: rgba(255, 255, 255, 0.97); }
  .navbar .pycon-logo {
    position: absolute;
    top: 50%;
    right: 0;
    width: 45px;
    height: 45px;
    -webkit-transform: translate(-22.5px, -22.5px);
    transform: translate(-22.5px, -22.5px); }
    .home .navbar .pycon-logo {
      display: none; }
    @media (min-width: 480px) {
      .navbar .pycon-logo {
        left: 50%; } }

.canvas {
  -webkit-transition: all .2s ease;
  transition: all .2s ease; }
  .canvas .overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 999;
    display: none;
    background-color: black;
    opacity: 0;
    -webkit-transition: opacity 0.2s ease;
    transition: opacity 0.2s ease; }
    .open .canvas .overlay {
      display: block;
      opacity: 0.8; }

.navbar-nav, .navbar-nav-rtl {
  position: absolute;
  top: 60px;
  margin: 0;
  padding: 0;
  list-style: none; }
  .navbar-nav a, .navbar-nav-rtl a {
    color: #646464;
    text-decoration: none; }
    .navbar-nav a:hover, .navbar-nav a:focus, .navbar-nav-rtl a:hover, .navbar-nav-rtl a:focus {
      text-decoration: none; }
  .navbar-nav .date, .navbar-nav-rtl .date {
    display: block;
    font-size: 12px; }

.navbar-toggle {
  position: absolute;
  top: 12px;
  left: 10px;
  width: 36px;
  height: 36px;
  padding: 0;
  border: 1px solid #d1d1d1;
  background-color: #fff; }

.navbar-toggle-rtl {
  position: absolute;
  top: 12px;
  right: 10px;
  width: 36px;
  height: 36px;
  padding: 0;
  border: 1px solid #d1d1d1;
  background-color: #fff; }

@media (max-width: 767px) {
  .navbar-nav {
    position: fixed;
    bottom: 0;
    width: 230px;
    border-right: 1px solid #d1d1d1;
    background-color: #fff;
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
    -webkit-transition: all .2s ease;
    transition: all .2s ease; }
    .open .navbar-nav {
      -webkit-transform: translateX(0);
      transform: translateX(0); }
    .navbar-nav a {
      display: block;
      padding: 15px 10px;
      border-bottom: 1px solid #d1d1d1;
      color: #646464;
      text-decoration: none; }
      .navbar-nav a:hover, .navbar-nav a:focus, .navbar-nav a:active {
        color: #fff;
        background-color: #1e5493;
        text-decoration: none; }
  .navbar-nav-rtl {
    position: fixed;
    bottom: 0;
    width: 230px;
    border-left: 1px solid #d1d1d1;
    background-color: #fff;
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    -webkit-transition: all .2s ease;
    transition: all .2s ease; }
    .open .navbar-nav-rtl {
      -webkit-transform: translateX(0%);
      transform: translateX(0%); }
    .navbar-nav-rtl a {
      display: block;
      padding: 15px 10px;
      border-bottom: 1px solid #d1d1d1;
      color: #646464;
      text-decoration: none; }
      .navbar-nav-rtl a:hover, .navbar-nav-rtl a:focus, .navbar-nav-rtl a:active {
        color: #fff;
        background-color: #1e5493;
        text-decoration: none; } }

@media (min-width: 768px) {
  .navbar-nav, .navbar-nav-rtl {
    position: relative;
    top: 0;
    left: 45px;
    padding: 0;
    padding-top: 18px;
    padding-bottom: 8px;
    text-align: center; }
    .navbar-nav li, .navbar-nav-rtl li {
      display: inline-block;
      margin: 0 20px;
      font-size: 18px;
      line-height: 1.3;
      text-align: left;
      vertical-align: middle; }
      .navbar-nav li:after, .navbar-nav-rtl li:after {
        display: block;
        width: 0;
        height: 2px;
        content: " ";
        -webkit-transition: width .2s ease, background-color .2s ease;
        transition: width .2s ease, background-color .2s ease; }
      .navbar-nav li.active:after, .navbar-nav li:active:after, .navbar-nav li:hover:after, .navbar-nav-rtl li.active:after, .navbar-nav-rtl li:active:after, .navbar-nav-rtl li:hover:after {
        width: 100%;
        background-color: #c65b2e;
        -webkit-transition: width .4s ease, background-color .4s ease;
        transition: width .4s ease, background-color .4s ease; }
    .navbar-nav .videos, .navbar-nav-rtl .videos {
      margin-right: 67.5px; }
    .navbar-nav .photos, .navbar-nav-rtl .photos {
      margin-left: 67.5px; }
    .navbar-nav .videos a,
    .navbar-nav .photos a, .navbar-nav-rtl .videos a,
    .navbar-nav-rtl .photos a {
      color: #c65b2e; }
  .navbar-toggle, .navbar-toggle-rtl {
    display: none; } }

.site-footer {
  position: relative;
  clear: both;
  width: 100%;
  padding: 1em 0 2em;
  color: #fff;
  background-color: #1e5493;
  font-size: 14px; }
  @media (min-width: 768px) {
    .site-footer {
      height: 350px;
      margin-top: -270px; } }
  .site-footer a {
    color: #fff;
    text-decoration: none; }
    .site-footer a:hover {
      text-decoration: underline; }
  .site-footer ul {
    padding: 0;
    list-style: none; }
  .site-footer .nav-footer {
    margin-left: -10px;
    margin-right: -10px;
    margin-bottom: 3em;
    line-height: 1.3; }
    .site-footer .nav-footer:before, .site-footer .nav-footer:after {
      content: " ";
      display: table; }
    .site-footer .nav-footer:after {
      clear: both; }
  .site-footer .nav-title {
    display: block;
    margin-top: 10px;
    border-top: 1px solid #527bac;
    font-weight: bold;
    font-size: 16px; }
    @media (min-width: 768px) {
      .site-footer .nav-title {
        margin-top: 0;
        margin-bottom: 10px;
        border-top: 0;
        border-bottom: 1px solid #527bac; }
        .site-footer .nav-title:hover {
          border-bottom: 1px solid #fff;
          text-decoration: none; } }
  .site-footer .section {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .site-footer .section {
        float: left;
        width: 25%; } }

.site-footer-rtl {
  position: relative;
  clear: both;
  width: 100%;
  padding: 1em 0 2em;
  color: #fff;
  background-color: #1e5493;
  font-size: 14px; }
  @media (min-width: 768px) {
    .site-footer-rtl {
      height: 350px;
      margin-top: -270px; } }
  .site-footer-rtl a {
    color: #fff;
    text-decoration: none; }
    .site-footer-rtl a:hover {
      text-decoration: underline; }
  .site-footer-rtl ul {
    padding: 0;
    list-style: none; }
  .site-footer-rtl .nav-footer {
    margin-left: -10px;
    margin-right: -10px;
    margin-bottom: 3em;
    line-height: 1.3; }
    .site-footer-rtl .nav-footer:before, .site-footer-rtl .nav-footer:after {
      content: " ";
      display: table; }
    .site-footer-rtl .nav-footer:after {
      clear: both; }
  .site-footer-rtl .nav-title {
    display: block;
    margin-top: 10px;
    border-top: 1px solid #527bac;
    font-weight: bold;
    font-size: 16px; }
    @media (min-width: 768px) {
      .site-footer-rtl .nav-title {
        margin-top: 0;
        margin-bottom: 10px;
        border-top: 0;
        border-bottom: 1px solid #527bac; }
        .site-footer-rtl .nav-title:hover {
          border-bottom: 1px solid #fff;
          text-decoration: none; } }
  .site-footer-rtl .section {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .site-footer-rtl .section {
        float: right;
        width: 25%; } }

.social-links {
  margin-bottom: 2em; }
  .social-links li {
    display: inline;
    margin-right: 20px;
    font-size: 2em; }
  @media (min-width: 768px) {
    .social-links {
      text-align: center; }
      .social-links li {
        margin-right: 10px; } }

@media (min-width: 768px) {
  .psf-trademark {
    text-align: center; } }

.psf-trademark a {
  font-weight: bold; }

@media (min-width: 768px) {
  .website-license {
    text-align: center; } }

.website-license a {
  font-weight: bold; }

.twitter-list {
  margin-left: -10px;
  margin-right: -10px; }
  .twitter-list:before, .twitter-list:after {
    content: " ";
    display: table; }
  .twitter-list:after {
    clear: both; }

.twitter-content {
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px; }
  @media (min-width: 768px) {
    .twitter-content {
      float: left;
      width: 50%; } }

.pycon, .program-item, .program-item-rtl, .registration, .djangogirls, .contact-us {
  text-align: center; }

.pycon, .program, .registration, .djangogirls, .contact-us {
  margin-top: 50px;
  margin-bottom: 60px; }

.program:after, .registration:after, .djangogirls:after, .contact-us:after {
  position: relative;
  top: 30px;
  width: 300px;
  height: 1px;
  margin: 0 auto;
  background-color: #d1d1d1; }

.home h1 {
  color: #1e5493; }

.home h2 {
  margin: 0;
  color: #c65b2e;
  font-size: 30px; }

.home .lead {
  font-size: 24px; }

.pycon {
  font-family: Amatic, "Helvetica Neue";
  line-height: 1; }
  .pycon .pycon-logo {
    display: inline-block;
    vertical-align: middle;
    width: 250px;
    height: 250px; }
  .pycon h1 {
    display: inline-block;
    margin: 0;
    font-size: 96px;
    text-align: left;
    /* as backup */
    text-align: start;
    vertical-align: middle; }
  .pycon .year {
    display: block;
    margin-left: 60px;
    color: #c65b2e; }
  @media (min-width: 480px) {
    .pycon .year {
      margin-left: 0; } }

.pycon-info {
  position: relative;
  font-size: 60px;
  font-family: Amatic, "Helvetica Neue"; }
  .pycon-info .pycon-location,
  .pycon-info .pycon-date {
    display: block;
    margin: 0;
    margin-top: 20px;
    padding: 0 20px; }
  @media (min-width: 768px) {
    .pycon-info {
      left: -40px; }
      .pycon-info .pycon-location,
      .pycon-info .pycon-date {
        display: inline-block;
        padding: 0 20px; } }

.claim {
  padding: 15px 0;
  color: #fff;
  background-color: #1e5493;
  font-size: 28px;
  text-align: center; }

.program {
  margin-left: -10px;
  margin-right: -10px; }
  .program:before, .program:after {
    content: " ";
    display: table; }
  .program:after {
    clear: both; }

@media (min-width: 768px) {
  .program-item:first-child {
    margin-left: 0; } }

@media (min-width: 768px) {
  .program-item-rtl:first-child {
    margin-left: 0; } }

.program-item {
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px;
  font-size: 18px; }
  @media (min-width: 768px) {
    .program-item {
      float: left;
      width: 33.33333%; } }
  .program-item .date {
    color: #1e5493; }
  .program-item .venue {
    margin-top: 1em;
    font-size: 16px; }
    .program-item .venue i {
      padding: 0 .25em; }

.program-item-rtl {
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px;
  font-size: 18px; }
  @media (min-width: 768px) {
    .program-item-rtl {
      float: right;
      width: 33.33333%; } }
  .program-item-rtl .date {
    color: #1e5493; }
  .program-item-rtl .venue {
    margin-top: 1em;
    font-size: 16px; }
    .program-item-rtl .venue i {
      padding: 0 .25em; }

.tito {
  font-size: 20px;
  text-align: left;
  text-align: start; }

.news {
  margin-top: 45px; }
  .news h2 {
    margin-bottom: 20px; }

.page-coc {
  font-size: 18px; }
  .page-coc blockquote {
    font-style: italic;
    font-size: 1.5em; }

.map {
  position: relative; }
  .map address {
    display: block;
    background-color: rgba(255, 255, 255, 0.9);
    text-align: left;
    padding: 0 12px; }
    @media (min-width: 768px) {
      .map address {
        position: absolute;
        bottom: 20px;
        left: 120px;
        z-index: 1000;
        width: 250px;
        padding: 20px; } }
    .map address .strong {
      margin-bottom: 10px;
      font-weight: bold; }
    .map address p {
      margin: 5px; }

#map {
  width: 100%;
  height: 250px; }

.event-full .talk-description, .event-full-rtl .talk-description, .talk-block .master .talk-description, .talk-block .practical .talk-description {
  padding: 0; }
  @media (min-width: 768px) {
    .event-full .talk-description, .event-full-rtl .talk-description, .talk-block .master .talk-description, .talk-block .practical .talk-description {
      padding-top: 20px; } }

@media (min-width: 480px) {
  .page-talks h1 {
    text-align: center; }
  .page-talks h3 {
    font-size: 16px; } }

.event-full {
  margin-left: -10px;
  margin-right: -10px; }
  .event-full:before, .event-full:after {
    content: " ";
    display: table; }
  .event-full:after {
    clear: both; }
  .event-full .title {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .event-full .title {
        float: left;
        width: 41.66667%; } }
  .event-full .keynote-text {
    font-size: 16px; }
  .event-full small {
    position: absolute;
    display: block;
    margin-top: -5px;
    color: #d1d1d1; }
    @media (min-width: 768px) {
      .event-full small {
        right: 10px; } }
  @media (min-width: 768px) {
    .event-full.general .title {
      padding-top: 10px; } }

@media (min-width: 768px) and (min-width: 768px) {
  .event-full.general .talk-description {
    padding-top: 10px; } }
  @media (min-width: 768px) {
    .event-full .title {
      text-align: right; }
      .event-full .title.amber, .event-full .title.russell {
        margin-bottom: 0; }
    .event-full h1,
    .event-full h2,
    .event-full h3 {
      margin-top: 0.7em; } }
  .event-full .talk-description {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .event-full .talk-description {
        float: left;
        width: 41.66667%; } }
    @media (min-width: 768px) {
      .event-full .talk-description {
        left: 16.66667%; } }
  .event-full .commit {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    text-align: center; }
    @media (min-width: 768px) {
      .event-full .commit {
        float: left;
        width: 16.66667%; } }
    @media (min-width: 768px) {
      .event-full .commit {
        right: 41.66667%; } }

.event-full-rtl {
  margin-left: -10px;
  margin-right: -10px; }
  .event-full-rtl:before, .event-full-rtl:after {
    content: " ";
    display: table; }
  .event-full-rtl:after {
    clear: both; }
  .event-full-rtl .title {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .event-full-rtl .title {
        float: right;
        width: 41.66667%; } }
  .event-full-rtl small {
    position: absolute;
    display: block;
    margin-top: -5px;
    color: #d1d1d1; }
    @media (min-width: 768px) {
      .event-full-rtl small {
        left: 10px; } }
  @media (min-width: 768px) {
    .event-full-rtl.general .title {
      padding-top: 10px; } }

@media (min-width: 768px) and (min-width: 768px) {
  .event-full-rtl.general .talk-description {
    padding-top: 10px; } }
  @media (min-width: 768px) {
    .event-full-rtl .title {
      text-align: left; }
      .event-full-rtl .title.amber, .event-full-rtl .title.russell {
        margin-bottom: 0; }
    .event-full-rtl h1,
    .event-full-rtl h2,
    .event-full-rtl h3 {
      margin-top: 0.7em; } }
  .event-full-rtl .talk-description {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .event-full-rtl .talk-description {
        float: right;
        width: 41.66667%; } }
    @media (min-width: 768px) {
      .event-full-rtl .talk-description {
        right: 16.66667%; } }
  .event-full-rtl .commit-rtl {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    text-align: center; }
    @media (min-width: 768px) {
      .event-full-rtl .commit-rtl {
        float: right;
        width: 16.66667%; } }
    @media (min-width: 768px) {
      .event-full-rtl .commit-rtl {
        left: 41.66667%; } }

.talk-block {
  margin-left: -10px;
  margin-right: -10px; }
  .talk-block:before, .talk-block:after {
    content: " ";
    display: table; }
  .talk-block:after {
    clear: both; }
  .talk-block h3 {
    margin-bottom: 0.2em; }
    @media (min-width: 768px) {
      .talk-block h3 {
        margin-top: -0;
        margin-bottom: 0; } }
  .talk-block .event {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    margin-top: 15px; }
    @media (min-width: 768px) {
      .talk-block .event {
        float: left;
        width: 50%; } }
    @media (min-width: 768px) {
      .talk-block .event {
        margin-top: 0; } }
  @media (min-width: 768px) {
    .talk-block .master {
      text-align: right; }
      .talk-block .master .speaker {
        padding-left: 30px; } }
  .talk-block .master .talk-description {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    padding-left: 0; }
    @media (min-width: 768px) {
      .talk-block .master .talk-description {
        float: left;
        width: 66.66667%; } }
  .talk-block .master .commit-holder {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    padding-right: 11px; }
    @media (min-width: 768px) {
      .talk-block .master .commit-holder {
        float: left;
        width: 33.33333%; } }
  .talk-block .practical .talk-description {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    padding-left: 0; }
    @media (min-width: 768px) {
      .talk-block .practical .talk-description {
        float: left;
        width: 66.66667%; } }
    @media (min-width: 768px) {
      .talk-block .practical .talk-description {
        left: 33.33333%; } }
  .talk-block .practical .commit-holder {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    padding-left: 11px; }
    @media (min-width: 768px) {
      .talk-block .practical .commit-holder {
        float: left;
        width: 33.33333%; } }
    @media (min-width: 768px) {
      .talk-block .practical .commit-holder {
        right: 66.66667%; } }

.talk-description {
  max-height: 100px;
  padding: 16px 0; }
  .talk-description .speaker {
    color: #1e5493;
    font-weight: bold; }
  .talk-description p {
    margin-top: 5px;
    margin-bottom: 0; }

.misc {
  color: #b8b8b8; }
  .misc small {
    margin-right: 0.7em; }
  @media (min-width: 992px) {
    .misc .track {
      display: none; } }
  @media (min-width: 768px) {
    .misc {
      text-align: right; }
      .practical .misc, .page-workshops .misc {
        text-align: left; } }
  .misc .social:last-child {
    margin-right: 0; }

.avatar {
  width: 96px;
  height: 96px;
  border: 1px solid #d1d1d1;
  border-radius: 50%;
  background-color: #fff; }

.commit {
  padding: 16px 0; }
  .commit .dot {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    background-color: #dfdfdf;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%); }
  .commit.empty {
    height: 96px; }
    .commit.empty:after {
      -webkit-transform: translateX(-5px);
      transform: translateX(-5px); }
  .commit.first:after {
    top: 50%;
    height: 50%; }
  .commit.last:after {
    height: 50%; }
  .commit:after {
    position: absolute;
    top: 0;
    z-index: -1000;
    width: 10px;
    height: 100%;
    content: " ";
    background-color: #dfdfdf;
    -webkit-transform: translateX(-53px);
    transform: translateX(-53px); }

.commit-rtl {
  padding: 16px 0; }
  .commit-rtl .dot {
    position: absolute;
    top: 50%;
    right: 50%;
    width: 35px;
    height: 35px;
    border-radius: 50%;
    background-color: #dfdfdf;
    -webkit-transform: translate(50%, -50%);
    transform: translate(50%, -50%); }
  .commit-rtl.empty {
    height: 96px; }
    .commit-rtl.empty:after {
      -webkit-transform: translateX(5px);
      transform: translateX(5px); }
  .commit-rtl.first:after {
    top: 50%;
    height: 50%; }
  .commit-rtl.last:after {
    height: 50%; }
  .commit-rtl:after {
    position: absolute;
    top: 0;
    z-index: -1000;
    width: 10px;
    height: 120%;
    content: " ";
    background-color: #dfdfdf;
    -webkit-transform: translateX(53px);
    transform: translateX(53px); }

.branch-description {
  margin-left: -10px;
  margin-right: -10px;
  vertical-align: bottom; }
  .branch-description:before, .branch-description:after {
    content: " ";
    display: table; }
  .branch-description:after {
    clear: both; }
  .branch-description .branch-name {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    height: 100px;
    font-size: 24px; }
    @media (min-width: 768px) {
      .branch-description .branch-name {
        float: left;
        width: 33.33333%; } }
  .branch-description .branch {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    left: -1px; }
    @media (min-width: 768px) {
      .branch-description .branch {
        float: left;
        width: 33.33333%; } }
  .branch-description .master,
  .branch-description .practical {
    position: absolute;
    bottom: 0; }
  .branch-description .master {
    right: 10px; }
  .branch-description .practical {
    left: 4px; }

.branch {
  height: 103px;
  margin-bottom: -2px;
  text-align: center; }
  .branch.in img {
    position: relative;
    left: 1px; }

.workshop h3 {
  margin-bottom: 0; }

.workshop .requirements h4 {
  margin-bottom: 0;
  font-weight: normal; }

.workshop .requirements ul,
.workshop .requirements p {
  margin-top: 0;
  margin-bottom: 0; }

small.workshop-time {
  color: #b8b8b8;
  display: block; }

.social {
  color: #d1d1d1; }
  .social.github:hover {
    color: #333; }
  .social.twitter:hover {
    color: #55acee; }
  .social.pdf:hover {
    color: #FF0000; }
  .master .social {
    margin-right: 10px;
    margin-left: 0; }
  .event-full .social {
    line-height: 2; }
  .workshop .social,
  .event-full .social,
  .practical .social {
    margin-right: 10px; }
    @media (min-width: 480px) {
      .workshop .social,
      .event-full .social,
      .practical .social {
        margin-left: 0; } }
  .workshop .social {
    margin-right: 0;
    margin-left: 0.5em; }

p.note {
  margin-top: 90px; }

.page-team h1 {
  text-align: center; }

.page-team .lead {
  width: 80%;
  margin: 0 auto 3em; }

.team-member {
  position: relative;
  float: left;
  width: 50%;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px;
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px; }
  @media (min-width: 768px) {
    .team-member {
      float: left;
      width: 25%; } }

.team-member-rtl {
  position: relative;
  float: right;
  width: 50%;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px;
  position: relative;
  min-height: 1px;
  padding-left: 10px;
  padding-right: 10px; }
  @media (min-width: 768px) {
    .team-member-rtl {
      float: right;
      width: 25%; } }

.team-member, .team-member-rtl {
  text-align: center; }
  .team-member a, .team-member-rtl a {
    text-decoration: none; }
  .team-member img, .team-member-rtl img {
    width: 96px;
    height: 96px;
    border: 1px solid #d1d1d1;
    border-radius: 48px; }
  .team-member .name, .team-member-rtl .name {
    padding: 0;
    margin: 0;
    font-size: 1.3em; }
  .team-member .description, .team-member-rtl .description {
    width: 80%;
    margin: 0 auto;
    margin-bottom: 20px; }

@media (min-width: 768px) {
  .ticket-overview {
    margin-left: -10px;
    margin-right: -10px;
    padding: 0;
    list-style: none; }
    .ticket-overview:before, .ticket-overview:after {
      content: " ";
      display: table; }
    .ticket-overview:after {
      clear: both; }
    .ticket-overview li {
      position: relative;
      min-height: 1px;
      padding-left: 10px;
      padding-right: 10px;
      text-align: center; } }
    @media (min-width: 768px) and (min-width: 768px) {
      .ticket-overview li {
        float: left;
        width: 16.66667%; } }

@media (min-width: 768px) {
      .ticket-overview li .number {
        display: block;
        color: #c65b2e;
        font-weight: bold;
        font-size: 56px; } }

.call-to-action {
  font-size: 1.3em;
  text-align: center; }
  .call-to-action:before {
    display: block;
    width: 300px;
    height: 1px;
    margin: 1em auto;
    content: " ";
    background-color: #d1d1d1; }

.sponsors {
  text-align: center; }
  .sponsors h3 {
    color: #1e5493; }
  .sponsors .diamond h3 {
    margin-bottom: -20px; }

.djangogirls,
.diamond,
.diamond-rtl,
.gold,
.gold-rtl,
.silver,
.silver-rtl,
.bronze,
.bronze-rtl {
  margin-left: -10px;
  margin-right: -10px; }
  .djangogirls:before, .djangogirls:after,
  .diamond:before,
  .diamond:after,
  .diamond-rtl:before,
  .diamond-rtl:after,
  .gold:before,
  .gold:after,
  .gold-rtl:before,
  .gold-rtl:after,
  .silver:before,
  .silver:after,
  .silver-rtl:before,
  .silver-rtl:after,
  .bronze:before,
  .bronze:after,
  .bronze-rtl:before,
  .bronze-rtl:after {
    content: " ";
    display: table; }
  .djangogirls:after,
  .diamond:after,
  .diamond-rtl:after,
  .gold:after,
  .gold-rtl:after,
  .silver:after,
  .silver-rtl:after,
  .bronze:after,
  .bronze-rtl:after {
    clear: both; }

.djangogirls {
  margin-top: 3em; }

.sponsor {
  /* .diamond & { */
  /* width: auto !important; */
  /* } */ }
  .djangogirls .sponsor,
  .diamond .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .djangogirls .sponsor,
      .diamond .sponsor {
        float: left;
        width: 100%; } }
    .djangogirls .sponsor img,
    .diamond .sponsor img {
      width: 65%; }
  .diamond-rtl .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .diamond-rtl .sponsor {
        float: right;
        width: 100%; } }
    .diamond-rtl .sponsor img {
      width: auto; }
  .gold .sponsor {
    position: relative;
    width: 35%;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .gold .sponsor {
        float: left;
        width: 35%; } }
  .gold-rtl .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .gold-rtl .sponsor {
        float: right;
        width: 50%; } }
  .silver .sponsor {
    position: relative;
    width: 20%;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .silver .sponsor {
        float: left;
        width: 20%; } }
  .silver-rtl .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .silver-rtl .sponsor {
        float: right;
        width: 33.33333%; } }
  .bronze .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .bronze .sponsor {
        float: left;
        width: 25%; } }
  .bronze-rtl .sponsor {
    position: relative;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px; }
    @media (min-width: 768px) {
      .bronze-rtl .sponsor {
        float: right;
        width: 25%; } }
  .sponsor img {
    width: 100%;
    height: auto; }
  .sponsor .sponsor-twisto {
    position: relative;
    top: -10px; }
  .sponsor .sponsor-redhat {
    position: relative;
    top: -30px; }
    .sponsor .sponsor-redhat img {
      width: 90%; }

.sponsor {
  float: none !important;
  vertical-align: middle;
  display: inline-block; }

.sponsor-placeholder {
  position: relative;
  top: 30px;
  font-size: 1.2em; }
  .sponsor-placeholder.alone {
    font-size: 2em; }

@media (max-width: 768px) {
  .sponsors h3 {
    margin-bottom: 0 !important; }
  .sponsors .sponsor {
    margin-top: 15px;
    padding: 0 30px; }
    .sponsors .sponsor .sponsor-redhat {
      top: auto !important; } }

@font-face {
  font-family: "Amatic";
  font-style: normal;
  font-weight: 700;
  src: local("Amatic SC Bold"), local("AmaticSC-Bold"), url(https://fonts.gstatic.com/s/amaticsc/v7/IDnkRTPGcrSVo50UyYNK75S3E-kSBmtLoNJPDtbj2Pk.ttf) format("truetype"); }

* {
  box-sizing: border-box; }

html,
body {
  width: 100%;
  height: 100%; }

body {
  overflow-x: hidden;
  font-weight: 300;
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, sans-serif;
  line-height: 1.4; }

a {
  color: #1e5493; }
  a sup {
    display: inline-block;
    text-decoration: none; }

.canvas {
  height: 100%; }

.viewport {
  min-height: 100%;
  padding-top: 60px;
  padding-bottom: 40px; }
  @media (min-width: 768px) {
    .viewport {
      padding-bottom: 350px; } }

.clearfix:before, .clearfix:after {
  content: " ";
  display: table; }

.clearfix:after {
  clear: both; }

.lead {
  font-size: 1.2em; }

.anchor {
  position: relative;
  top: -60px;
  display: block;
  visibility: hidden; }

h1 {
  color: #c65b2e; }

h2,
h3 {
  margin: 2em 0 1em;
  color: #1e5493; }

hr {
  height: 1px;
  border: 0;
  background-color: #1e5493; }

.pycontest-email {
  color: #c65b2e;
  font-size: 36px;
  text-align: center;
  font-weight: bold; }

/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64, */
